{"mappings":"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","sources":["js/index.js"],"sourcesContent":["// Napisz aplikacje TodoList. Pod spodem lista wymagan\n\n// 1. Stworz strone z lista todos i zaladuj elementy z API\n// 2. Zrob nawigacje, dzieki ktorej bedziesz mogl przejsc do podstrony add\n// 3. Na podstronie add, zrob obsluge dodawania elementow todo do API\n// 4. Po poprawnym dodaniu do strony, przekieruj na podstrone glowna\n\n// Zadania dodatkowe\n\n// 5. Pod lista todo, dodaj przycisk 'remove todos', ktory spowoduje usuniecie wszystkich todos. \n// Rzeczy do wykonania\n\n//  - Dodaj do pliku server.js obsluge endpointa /todos z metoda HTTP REMOVE\n//  - Endpoint bedzie mial za zadanie, wyczyscic tablice todos z pliku todos.json\n//  - Jesli operacja sie powiedzie, to wyczysc liste z HTML\n\n// 6. Ostyluj listÄ™\n\n// 7*. Dodaj ikonke X przy kazdym elemencie TODO. Nastepnie za pomoca \n// document.addEventListener('click', handleRemoveTodo) i wlasciwosci event.target spraw, zeby usunac kazdy pojedynczy element. (pamietaj o przekazaniu ID na BE).\n\nconst todoList = document.querySelector('#todoList');\nconst removeTodos = document.querySelector('#removeTodos');\n\nconst renderTodoList = ((data) => {\n    todoList.innerHTML = '';\n    console.log(data);\n    data.forEach((entry) =>{\n        todoList.innerHTML += `\n        <li> Title: ${entry.title} Author: ${entry.author}\n            <button class='edit' data-elementId=\"${entry.id}\"> &#9998 </button>\n            <button class='close' data-elementId=\"${entry.id}\"> X </button>\n        </li>\n        `\n        })\n})\n\n/* <button class='close'> X </button>\n            <button class='edit'> &#9998 </button> */\n\nconst fetchTodosFE = (  () => {\n    fetch('http://localhost:5000/todos')\n    .then((response) => {\n        // console.log(response.json());\n        return response.json();\n    })\n    .then((data) => {\n        renderTodoList(data.todos);\n    })\n});\n\nconst handleRemoveTodos = () => {\n       console.log('Yoyo');\n        fetch('http://localhost:5000/todos', {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify({\"todos\":[]})\n        })\n        .then(() => {\n           console.log('Yo');     \n        })\n}\n\nconst handleDeleteToDo = (event) => {\n    const idToDelete = event.target.getAttribute('data-elementId');\n    console.log(\"handleDeleteToDo entry with idToDelete: \" + idToDelete);\n    fetch(`http://localhost:5000/todos/${idToDelete}`, {\n        method: 'DELETE'\n    })\n    .then(() => {\n        console.log('handleDeleteToDo invoked');\n    })\n}\n\n  \n\nconst handleClickOnListBtns = (event) => {\n    console.log(event.target);\n    if(event.target.classList.contains('edit'))\n    {\n        handleEditToDo(event);\n        // console.log('Clicked \"edit\" class element');\n    }\n    if(event.target.classList.contains('close'))\n    {\n        event.target.parentElement.remove();\n        handleDeleteToDo(event);\n        // console.log('Clicked \"close\" class element');\n    }\n\n}\n\nfetchTodosFE();\nremoveTodos.addEventListener('click', handleRemoveTodos);\ntodoList.addEventListener('click', handleClickOnListBtns);"],"names":[],"version":3,"file":"index.9345d665.js.map","sourceRoot":"/__parcel_source_root/"}